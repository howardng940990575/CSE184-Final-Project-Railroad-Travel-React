{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["require","App","getOption","geoCoordMap","convertData","data","res","i","length","dataItem","fromCoord","name","toCoord","push","fromName","toName","coords","value","color","series","forEach","item","type","zlevel","effect","show","period","trailLength","symbolSize","lineStyle","normal","width","curveness","symbol","opacity","coordinateSystem","rippleEffect","brushType","label","position","formatter","val","itemStyle","emphasis","areaColor","map","concat","backgroundColor","title","text","subtext","left","textStyle","tooltip","trigger","params","ticket","callback","seriesType","legend","orient","top","selectedMode","geo","roam","borderColor","borderWidth","className","option","this","style","height","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eb476ccc.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport ReactEcharts from \"echarts-for-react\";\n\nrequire(\"echarts/map/js/china.js\");\nclass App extends Component {\n  getOption = () => {\n    var geoCoordMap = {\n      '上海': [121.4648, 31.2891],\n      '上海南火车站': [121.487899,31.2492],\n      '苏州火车站' : [120.614214,31.337661],\n      '温州火车站': [120.691528, 27.986189],\n      '东莞': [113.8953, 22.901],\n      '东营': [118.7073, 37.5513],\n      '中山': [113.4229, 22.478],\n      '临汾': [111.4783, 36.1615],\n      '临沂': [118.3118, 35.2936],\n      '丹东': [124.541, 40.4242],\n      '丽水': [119.5642, 28.1854],\n      '乌鲁木齐': [87.9236, 43.5883],\n      '佛山': [112.8955, 23.1097],\n      '保定': [115.0488, 39.0948],\n      '兰州': [103.5901, 36.3043],\n      '包头': [110.3467, 41.4899],\n      '北京': [116.4551, 40.2539],\n      '北海': [109.314, 21.6211],\n      '南京': [118.8062, 31.9208],\n      '南宁': [108.479, 23.1152],\n      '南昌': [116.0046, 28.6633],\n      '南通': [121.1023, 32.1625],\n      '厦门': [118.1689, 24.6478],\n      '台州': [121.1353, 28.6688],\n      '合肥': [117.29, 32.0581],\n      '呼和浩特': [111.4124, 40.4901],\n      '咸阳': [108.4131, 34.8706],\n      '哈尔滨': [127.9688, 45.368],\n      '唐山': [118.4766, 39.6826],\n      '嘉兴': [120.9155, 30.6354],\n      '大同': [113.7854, 39.8035],\n      '大连': [122.2229, 39.4409],\n      '天津': [117.4219, 39.4189],\n      '太原': [112.3352, 37.9413],\n      '威海': [121.9482, 37.1393],\n      '宁波': [121.5967, 29.6466],\n      '宝鸡': [107.1826, 34.3433],\n      '宿迁': [118.5535, 33.7775],\n      '常州': [119.4543, 31.5582],\n      '广州': [113.5107, 23.2196],\n      '廊坊': [116.521, 39.0509],\n      '延安': [109.1052, 36.4252],\n      '张家口': [115.1477, 40.8527],\n      '徐州': [117.5208, 34.3268],\n      '德州': [116.6858, 37.2107],\n      '惠州': [114.6204, 23.1647],\n      '成都': [103.9526, 30.7617],\n      '扬州': [119.4653, 32.8162],\n      '承德': [117.5757, 41.4075],\n      '拉萨': [91.1865, 30.1465],\n      '无锡': [120.3442, 31.5527],\n      '日照': [119.2786, 35.5023],\n      '昆明': [102.9199, 25.4663],\n      '杭州': [119.5313, 29.8773],\n      '枣庄': [117.323, 34.8926],\n      '柳州': [109.3799, 24.9774],\n      '株洲': [113.5327, 27.0319],\n      '武汉': [114.3896, 30.6628],\n      '汕头': [117.1692, 23.3405],\n      '江门': [112.6318, 22.1484],\n      '沈阳': [123.1238, 42.1216],\n      '沧州': [116.8286, 38.2104],\n      '河源': [114.917, 23.9722],\n      '泉州': [118.3228, 25.1147],\n      '泰安': [117.0264, 36.0516],\n      '泰州': [120.0586, 32.5525],\n      '济南': [117.1582, 36.8701],\n      '济宁': [116.8286, 35.3375],\n      '海口': [110.3893, 19.8516],\n      '淄博': [118.0371, 36.6064],\n      '淮安': [118.927, 33.4039],\n      '深圳': [114.5435, 22.5439],\n      '清远': [112.9175, 24.3292],\n      '温州': [120.498, 27.8119],\n      '渭南': [109.7864, 35.0299],\n      '湖州': [119.8608, 30.7782],\n      '湘潭': [112.5439, 27.7075],\n      '滨州': [117.8174, 37.4963],\n      '潍坊': [119.0918, 36.524],\n      '烟台': [120.7397, 37.5128],\n      '玉溪': [101.9312, 23.8898],\n      '珠海': [113.7305, 22.1155],\n      '盐城': [120.2234, 33.5577],\n      '盘锦': [121.9482, 41.0449],\n      '石家庄': [114.4995, 38.1006],\n      '福州': [119.4543, 25.9222],\n      '秦皇岛': [119.2126, 40.0232],\n      '绍兴': [120.564, 29.7565],\n      '聊城': [115.9167, 36.4032],\n      '肇庆': [112.1265, 23.5822],\n      '舟山': [122.2559, 30.2234],\n      '苏州': [120.6519, 31.3989],\n      '莱芜': [117.6526, 36.2714],\n      '菏泽': [115.6201, 35.2057],\n      '营口': [122.4316, 40.4297],\n      '葫芦岛': [120.1575, 40.578],\n      '衡水': [115.8838, 37.7161],\n      '衢州': [118.6853, 28.8666],\n      '西宁': [101.4038, 36.8207],\n      '西安': [109.1162, 34.2004],\n      '贵阳': [106.6992, 26.7682],\n      '连云港': [119.1248, 34.552],\n      '邢台': [114.8071, 37.2821],\n      '邯郸': [114.4775, 36.535],\n      '郑州': [113.4668, 34.6234],\n      '鄂尔多斯': [108.9734, 39.2487],\n      '重庆': [107.7539, 30.1904],\n      '金华': [120.0037, 29.1028],\n      '铜川': [109.0393, 35.1947],\n      '银川': [106.3586, 38.1775],\n      '镇江': [119.4763, 31.9702],\n      '长春': [125.8154, 44.2584],\n      '长沙': [113.0823, 28.2568],\n      '长治': [112.8625, 36.4746],\n      '阳泉': [113.4778, 38.0951],\n      '青岛': [120.4651, 36.3373],\n      '韶关': [113.7964, 24.7028],\n      'Hong Kong': [113.9876131, 22.3526632]\n  };\n  \n  var XAData = [\n    //   [{\n    //       name: '西安'\n    //   }, {\n    //       name: '北京',\n    //       value: 100\n    //   }],\n    //   [{\n    //       name: '西安'\n    //   }, {\n    //       name: '上海',\n    //       value: 100\n    //   }],\n    //   [{\n    //       name: '西安'\n    //   }, {\n    //       name: '广州',\n    //       value: 100\n    //   }],\n    //   [{\n    //       name: '西安'\n    //   }, {\n    //       name: '西宁',\n    //       value: 100\n    //   }],\n    //   [{\n    //       name: '西安'\n    //   }, {\n    //       name: '银川',\n    //       value: 100\n    //   }],\n    //   [{\n    //       name: '西安'\n    //   }, {\n    //       name: '重庆',\n    //       value: 100\n    //   }],\n    //   [{\n    //       name: '西安'\n    //   }, {\n    //       name: 'Hong Kong',\n    //       value: 100\n    //   }]\n  ];\n  \n  var XNData = [\n      // [{name:'西宁'}, {name:'北京',value:100}],\n      // [{name:'西宁'}, {name:'上海',value:100}],\n      // [{name:'西宁'}, {name:'广州',value:100}],\n      // [{name:'西宁'}, {name:'西安',value:100}],\n      // [{name:'西宁'}, {name:'银川',value:100}]\n  ];\n  \n  var YCData = [\n      // [{name:'银川'}, {name:'北京',value:100}],\n      // [{name:'银川'}, {name:'广州',value:100}],\n      // [{name:'银川'}, {name:'上海',value:100}],\n      // [{name:'银川'}, {name:'西安',value:100}],\n      // [{name:'银川'}, {name:'西宁',value:100}],\n  ];\n  var SHANGHAIData = [\n        [{name:'上海南火车站'}, {name:'苏州火车站',value:100}]\n  ];\n  var WENZHOUData = [\n    [{name:'温州火车站'}, {name:'上海南火车站',value:100}]\n];\n  var HKData = [\n      [{\n          name: 'Hong Kong'\n      }, {\n          name: '鄂尔多斯',\n          value: 100\n      }]\n  ];\n  \n // var planePath = 'path://M1705.06,1318.313v-89.254l-319.9-221.799l0.073-208.063c0.521-84.662-26.629-121.796-63.961-121.491c-37.332-0.305-64.482,36.829-63.961,121.491l0.073,208.063l-319.9,221.799v89.254l330.343-157.288l12.238,241.308l-134.449,92.931l0.531,42.034l175.125-42.917l175.125,42.917l0.531-42.034l-134.449-92.931l12.238-241.308L1705.06,1318.313z';\n  var planePath = 'arrow';\n  var convertData = function(data) {\n  \n      var res = [];\n      for (var i = 0; i < data.length; i++) {\n  \n          var dataItem = data[i];\n  \n          var fromCoord = geoCoordMap[dataItem[0].name];\n          var toCoord = geoCoordMap[dataItem[1].name];\n          if (fromCoord && toCoord) {\n              res.push({\n                  fromName: dataItem[0].name,\n                  toName: dataItem[1].name,\n                  coords: [fromCoord, toCoord],\n                  value: dataItem[1].value\n              });\n          }\n      }\n      return res;\n  \n  };\n  \n  var color = ['#a6c84c', '#ffa022', '#46bee9']; //航线的颜色\n  var series = [];\n  [\n      //['西安', XAData],\n      //['西宁', XNData],\n      //['银川', YCData],\n      ['Hong Kong', HKData],\n      ['上海南火车站',SHANGHAIData],\n      ['温州火车站', WENZHOUData]\n  ].forEach(function(item, i) {\n      series.push({\n          name: item[0] + ' Top3',\n          type: 'lines',\n          zlevel: 1,\n          effect: {\n              show: true,\n              period: 6,\n              trailLength: 0.7,\n              color: 'red', //arrow箭头的颜色\n              symbolSize: 3\n          },\n          lineStyle: {\n              normal: {\n                  color: color[i],\n                  width: 0,\n                  curveness: 0\n              }\n          },\n          data: convertData(item[1])\n      }, {\n          name: item[0] + ' Top3',\n          type: 'lines',\n          zlevel: 2,\n          symbol: ['none', 'arrow'],\n          symbolSize: 10,\n          effect: {\n              show: true,\n              period: 6,\n              trailLength: 0,\n              symbol: planePath,\n              symbolSize: 15\n          },\n          lineStyle: {\n              normal: {\n                  color: color[i],\n                  width: 1,\n                  opacity: 0.6,\n                  curveness: 0\n              }\n          },\n          data: convertData(item[1])\n      }, {\n          name: item[0] + ' Top3',\n          type: 'effectScatter',\n          coordinateSystem: 'geo',\n          zlevel: 2,\n          rippleEffect: {\n              brushType: 'stroke'\n          },\n          label: {\n              normal: {\n                  show: true,\n                  position: 'right',\n                  formatter: '{b}'\n              }\n          },\n          symbolSize: function(val) {\n              return val[2] / 8;\n          },\n          itemStyle: {\n              normal: {\n                  color: color[i],\n              },\n              emphasis: {\n                  areaColor: '#2B91B7'\n              }\n          },\n          data: item[1].map(function(dataItem) {\n              return {\n                  name: dataItem[1].name,\n                  value: geoCoordMap[dataItem[1].name].concat([dataItem[1].value])\n              };\n          })\n      });\n  });\n  var option = {\n      backgroundColor: '#000',\n      title: {\n          text: '模拟航线',\n          subtext: '数据纯属虚构',\n          left: 'center',\n          textStyle: {\n              color: '#fff'\n          }\n      },\n      tooltip: {\n          trigger: 'item',\n          formatter: function(params, ticket, callback) {\n              if (params.seriesType == \"effectScatter\") {\n                  return \"线路：\" + params.data.name + \"\" + params.data.value[2];\n              } else if (params.seriesType == \"lines\") {\n                  return params.data.fromName + \">\" + params.data.toName + \"<br />\" + params.data.value;\n              } else {\n                  return params.name;\n              }\n          }\n      },\n      legend: {\n          orient: 'vertical',\n          top: 'bottom',\n          left: 'right',\n          data: ['西安 Top3', '西宁 Top3', '银川 Top3'],\n          textStyle: {\n              color: '#fff'\n          },\n          selectedMode: 'multiple'\n      },\n      geo: {\n          map: 'china',\n          label: {\n              emphasis: {\n                  show: true,\n                  color: '#fff'\n              }\n          },\n          roam: true,\n          itemStyle: {\n              normal: {\n                  areaColor: '#00186E',\n                  borderColor: '#195BB9',\n                  borderWidth: 1,\n              },\n              emphasis: {\n                  areaColor: '#2B91B7'\n              }\n          }\n      },\n      series: series\n  };\n    return option;\n  };\n  render() {\n    return (\n      <div className='examples'>\n        <div className='parent'>\n          \n          <ReactEcharts\n            option={this.getOption()}\n            style={{height: '700px', width: '100%'}}\n            className='react_for_echarts' />\n        </div>\n    </div>\n    );\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}